import{n as t,s as e,J as n}from"./index-026c35aa.js";const s=[];function a(n,a=t){let o;const r=[];function c(t){if(e(n,t)&&(n=t,o)){const t=!s.length;for(let e=0;e<r.length;e+=1){const t=r[e];t[1](),s.push(t,n)}if(t){for(let t=0;t<s.length;t+=2)s[t][0](s[t+1]);s.length=0}}}return{set:c,update:function(t){c(t(n))},subscribe:function(e,s=t){const i=[e,s];return r.push(i),1===r.length&&(o=a(c)||t),e(n),()=>{const t=r.indexOf(i);-1!==t&&r.splice(t,1),0===r.length&&(o(),o=null)}}}}const o=a(0),r=a(""),c=a(null),i="https://api.todoist.com/rest/v1",l=async()=>{let t={headers:{Authorization:`Bearer ${n(r)}`}};const e=await fetch(`${i}/tasks?filter=(today%20%7C%20overdue)%20%26%20(%401P%20%7C%20%402P%20%7C%20%403P%20%7C%20%405P%20%7C%20%408P)`,t);return await e.json()},u=async()=>{let t={headers:{Authorization:`Bearer ${n(r)}`}};const e=await fetch(`${i}/projects`,t);var s=(await e.json()).filter((t=>"_points"==t.name))[0];const a=await fetch(`${i}/tasks?project_id=${s.id}`,t);return(await a.json())[0].content},f=()=>{localStorage.clear()};export{r as a,f as c,l as f,u as g,c as m,o as p,a as w};
