import{n as t,s as a,J as e}from"./index-026c35aa.js";const s=[];function n(e,n=t){let o;const r=[];function i(t){if(a(e,t)&&(e=t,o)){const t=!s.length;for(let a=0;a<r.length;a+=1){const t=r[a];t[1](),s.push(t,e)}if(t){for(let t=0;t<s.length;t+=2)s[t][0](s[t+1]);s.length=0}}}return{set:i,update:function(t){i(t(e))},subscribe:function(a,s=t){const c=[a,s];return r.push(c),1===r.length&&(o=n(i)||t),a(e),()=>{const t=r.indexOf(c);-1!==t&&r.splice(t,1),0===r.length&&(o(),o=null)}}}}const o=n(0),r=n(""),i=n(null),c="https://api.todoist.com/rest/v1",l={2156538858:1,2156538859:2,2156538862:3,2156538864:5,2156538865:8},h=async()=>{let t={headers:{Authorization:`Bearer ${e(r)}`}};const a=await fetch(`${c}/tasks?filter=(today%20%7C%20overdue)%20%26%20(%401P%20%7C%20%402P%20%7C%20%403P%20%7C%20%405P%20%7C%20%408P)`,t);return await a.json()},u=async t=>{let a={method:"POST",headers:{Authorization:`Bearer ${e(r)}`}};const s=await fetch(`${c}/tasks/${t.id}/close`,a);await s.ok&&d($(t))},d=async t=>{let a=await f();a+=t;var s=await p();let n={method:"POST",headers:{Authorization:`Bearer ${e(r)}`,"Content-Type":"application/json"},body:JSON.stringify({content:a.toString()})};await fetch(`${c}/tasks/${s.id}`,n)},f=async()=>{var t=await w();let a={headers:{Authorization:`Bearer ${e(r)}`}};const s=await fetch(`${c}/tasks?project_id=${t.id}`,a);let n=await s.json();return parseInt(n[0].content)},p=async()=>{var t=await w();let a={headers:{Authorization:`Bearer ${e(r)}`}};const s=await fetch(`${c}/tasks?project_id=${t.id}`,a);return(await s.json())[0]},w=async()=>{let t={headers:{Authorization:`Bearer ${e(r)}`}};const a=await fetch(`${c}/projects`,t);return(await a.json()).filter((t=>"_points"==t.name))[0]},$=t=>l[g(t)],g=t=>t.label_ids.length>0?t.label_ids[0]:null,y=()=>{localStorage.clear()};export{r as a,u as b,y as c,h as f,f as g,l,i as m,o as p,n as w};
